declare const useTeams: () => {
    loading: boolean;
    delayedLoading: any;
    errors: Record<string, any>;
    team: import("..").ResourceType;
    teams: import("..").ResourceType[];
    findTeam: (id: import("..").ID) => import("..").ResourceType;
    findTeams: (queryParams?: import("..").QueryParamsType, loadMore?: boolean) => Promise<any>;
    updateTeam: (resource: import("..").ResourceType) => import("..").ResourceType;
    createTeam: (resource: import("..").ResourceType) => import("..").ResourceType;
    deleteTeam: (id: import("..").ID) => Promise<any>;
    selectTeam: (teamId: any) => Promise<void>;
    setTeam: (value: import("..").ResourceType) => void;
    handleChange: (e: any) => void;
    handleChangePage: any;
    reloadTeams: () => Promise<any>;
    query: import("..").QueryParamsType;
    setQuery: (params: import("..").QueryParamsType) => void;
    page: number;
    numPages: number;
    perPage: number;
    totalCount: number;
    sortBy: any;
    sortDirection: any;
    handleSort: any;
    loadMore: () => void;
    loadingWrapper: (fn: () => void) => void;
    paginate: (page: number) => Promise<any>;
};
export default useTeams;
